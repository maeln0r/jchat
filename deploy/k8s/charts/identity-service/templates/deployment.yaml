apiVersion: apps/v1
kind: Deployment
metadata:
  name: identity-service
  namespace: jchat
  labels:
    app: identity-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: identity-service
  template:
    metadata:
      labels:
        app: identity-service
    spec:
      initContainers:
        - name: wait-for-pg
          image: busybox:1.36
          command: [ 'sh','-c','until nc -z pg-postgres 5432; do echo waiting for pg; sleep 2; done' ]
      containers:
        - name: app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: {{ .Values.service.port | default 8091 }}
          envFrom:
            - secretRef:
                name: pg-auth
            - secretRef:
                name: identity-secrets
          env:
            {{- range $k, $v := .Values.env }}
              - name: {{ $k }}
                value: "{{ $v }}"
            {{- end }}
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8091
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8091
            initialDelaySeconds: 30
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8091
            failureThreshold: 30
            periodSeconds: 2
